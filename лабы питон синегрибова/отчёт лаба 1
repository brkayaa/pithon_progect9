Отчёт по лабораторной работе  
Тема: Расчёт расстояния Хэмминга между последовательностями ДНК  
Цель работы 
Изучение точечных мутаций в ДНК путём сравнения нуклеотидных последовательностей с эталоном и расчёта расстояния Хэмминга — количества несовпадающих позиций.  
Задачи
1. Реализовать чтение эталонной последовательности из консоли.  
2. Считать набор последовательностей из файла `IN.txt`.  
3. Для каждой последовательности вычислить расстояние Хэмминга относительно эталона.  
4. Записать результаты в файл `OUT.txt`.  
Инструменты и алгоритмы
Язык программирования: Python  
Алгоритм :
  1. Чтение эталонной строки (`standart_line`) через `input()`.  
  2. Построчное чтение файла `IN.txt`.  
  3. Для каждой строки из файла:  
     - Удаление символов переноса (`strip()`).  
     - Поэлементное сравнение с эталоном.  
     - Подсчёт несовпадающих символов (расстояние Хэмминга).  
  4. Запись результатов в `OUT.txt`.  
Ключевые операции:
```python
if line[i] != standart_line[i]:
    hamming_dist += 1
```
Ошибки и их исправления
1. Ошибка: Неправильный путь к файлу.  
   Исправление: Проверить расположение `IN.txt` относительно скрипта или указать абсолютный путь.  
2. Ошибка: Разная длина строк.  
   Исправление: Добавить проверку:  
   if len(line) != len(standart_line):
       raise ValueError("Последовательности разной длины!")
3. Ошибка: Некорректные символы в файле (не A, T, G, C).  
   Исправление: Валидация данных: 
   allowed = {'A', 'T', 'G', 'C'}
   if any(c not in allowed for c in line):
       continue  

Выводы 
Реализован алгоритм расчёта расстояния Хэмминга, полезный для анализа точечных мутаций в ДНК. Программа корректно обрабатывает входные данные и сохраняет результаты в файл.Расстояние Хэмминга позволяет количественно оценить эволюционную дистанцию между последовательностями.  
Применение: 
Метод может быть использован в биоинформатике для:  
Сравнения геномов разных видов.  
Поиска мутаций в медицинских исследованиях.  


